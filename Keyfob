/*
 * Watchdog Sleep Example 
 * Demonstrate the Watchdog and Sleep Functions
 * LED on digital pin 0
 * 
 * KHM 2008 / Lab3/  Martin Nawrath nawrath@khm.de
 * Kunsthochschule fuer Medien Koeln
 * Academy of Media Arts Cologne
 *
 * Modified on 5 Feb 2011 by InsideGadgets (www.insidegadgets.com)
 * to suit the ATtiny85 and removed the cbi( MCUCR,SE ) section 
 * in setup() to match the Atmel datasheet recommendations
 */

#include <avr/sleep.h>
#include <avr/wdt.h>
#include <SoftwareSerial.h>

#define BEATTIME 100 //Length of the generated tone (msec)
#define SPEAKER 3 //Pin number of the speaker

#ifndef cbi
#define cbi(sfr, bit) (_SFR_BYTE(sfr) &= ~_BV(bit))
#endif
#ifndef sbi
#define sbi(sfr, bit) (_SFR_BYTE(sfr) |= _BV(bit))
#endif

SoftwareSerial mySerial(0,1);// RX, TX
int count = 0;
char c =' ';
int buckle = 0;
const int buttonPin = 2;
volatile boolean f_wdt = 1;

void setup(){
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);
  pinMode(SPEAKER,OUTPUT);
  setup_watchdog(8); // approximately 4 seconds sleep
}

void loop(){
  if (f_wdt==1) {  // wait for timed out watchdog / flag is set when a watchdog timeout occurs
    f_wdt=0;       // reset flag
    
    if(count>15){
  
      if (Serial.available()>0){
        mySerial.write(Serial.read());
      }
      if (mySerial.available()){
        c = mySerial.read();
        if (c == 76 && buckle == 0){
          for(int i = 0; i <=5; i++){
            //Set buckle to engaged if the buckle is on and engaged
            //count set to reduce the time to wake up the attiny
            if (c==49){ 
              buckle = 1;
              count = 10;  
            }
            //count set to reduce the time to wake up the attiny
            else if (c==48){ 
              buckle = 0;
              count = 10;  
            }
            //count reset
            else{
              count = 0;
            }
          }
        }
        else if (c==76 && buckle == 1){
          count = 10;   
        }
        else if (buckle == 1 && c != 65 && c != 84 && c != 43 && c != 67 && c != 79 && c != 78 && c != 69){
          while (digitalRead(buttonPin) == LOW){
            tone(SPEAKER,294,BEATTIME) ; // Re
            delay(BEATTIME) ;
            tone(SPEAKER,330,BEATTIME) ; // Mi
            delay(BEATTIME) ;    
          }
          count = 10 
        }
        else{
          count = 0
        }
      }
    }
    count++;
  }
}

// set system into the sleep state 
// system wakes up when wtchdog is timed out
void system_sleep() {
  cbi(ADCSRA,ADEN);                    // switch Analog to Digitalconverter OFF

  set_sleep_mode(SLEEP_MODE_PWR_DOWN); // sleep mode is set here
  sleep_enable();

  sleep_mode();                        // System sleeps here

  sleep_disable();                     // System continues execution here when watchdog timed out 
  sbi(ADCSRA,ADEN);                    // switch Analog to Digitalconverter ON
}

// 0=16ms, 1=32ms,2=64ms,3=128ms,4=250ms,5=500ms
// 6=1 sec,7=2 sec, 8=4 sec, 9= 8sec
void setup_watchdog(int ii) {

  byte bb;
  int ww;
  if (ii > 9 ) ii=9;
  bb=ii & 7;
  if (ii > 7) bb|= (1<<5);
  bb|= (1<<WDCE);
  ww=bb;

  MCUSR &= ~(1<<WDRF);
  // start timed sequence
  WDTCR |= (1<<WDCE) | (1<<WDE);
  // set new watchdog timeout value
  WDTCR = bb;
  WDTCR |= _BV(WDIE);

}
  
// Watchdog Interrupt Service / is executed when watchdog timed out
ISR(WDT_vect) {
  f_wdt=1;  // set global flag
}
