#include <SoftwareSerial.h>

#define BEATTIME 100 //Length of the generated tone (msec)
#define SPEAKER 6 //Pin number of the speaker

SoftwareSerial mySerial(2,3);// RX, TX
int count = 0;
char c =' ';
char d =' ';
int buckle = 0;
int count = 0;
int buttoncount = 0;
int sleep = 0;
const int buttonPin = 7;
const int ledPin =  13; 

void setup(){
  // initialize the pushbutton pin as an input:
  mySerial.begin(9600);
  Serial.begin(9600);
  pinMode(buttonPin, INPUT);
  pinMode(SPEAKER,OUTPUT);
}

void loop(){
	if (mySerial.available()>0)
	Serial.write(mySerial.read());
	if (mySerial.available()){
		c = mySerial.read();
		delay(1000);
		while (c == 'N' && buckle == 0){ //Buckle not engaged
			d = mySerial.read();
			sleep = 0;
			count = 0;
			if (d == '1'){//set buckle to enaged and device sleep
			  buckle = 1;
			}
			else if (d == '0'){ //buckle stays disengaged and device sleep
			  buckle = 0;
			}
		}
		while (c == 'N' && buckle == 1){
			sleep = 0;
			count = 0;
			d = mySerial.read();
			if (d == '1'){ // buckle stays engaged and device sleep
				buckle = 1;
			} 
			else if (d == '0'){ //buckle is set to disengaged and device sleep
				buckle = 0;
			}
		}
		while (buckle == 1 && count <= 50 || sleep = 1){//Alarm engaged
			while (digitalRead(buttonPin) == LOW){
				tone(SPEAKER,294,BEATTIME) ; // Re
				delay(BEATTIME) ;
				tone(SPEAKER,330,BEATTIME) ; // Mi
				delay(BEATTIME) ;    
			}
			
			while (digitalRead(buttonPin) == HIGH){//manual reset device
				buttoncount = buttoncount + 1;
				delay(1000)
				if (buttoncount >= 4){
					tone(SPEAKER,540,BEATTIME) ; // Mi
					delay(BEATTIME) ;    
					buckle = 0;
					buttoncount = 0;
					count = 0;
					sleep = 0;
				}
			}
			
			if (buttoncount > 0 && buttoncount < 4){//alarm sleep
				sleep = 1;
				delay (5000);
			}

			
		}
		count = count + 1;
	}
}

